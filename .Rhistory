type='l', lwd=0.5)
##  dev.off()
}
epicyclesF(1000)
epicyclesF      <- function(cycles){
set.seed(1234)
params      <- data.frame(amp=1/seq(1, cycles), freq=seq(1, cycles),
phase=runif(cycles, -pi/2, pi/2))
omegaT      <- seq(0, 2*pi, 0.0001)
X           <- numeric(length(omegaT))
Y           <- numeric(length(omegaT))
for (i in 1:length(omegaT)){
X[i]        <- sum(params$amp*cos((params$freq*omegaT[i]+params$phase)))
Y[i]        <- sum(params$amp*sin((params$freq*omegaT[i]+params$phase)))
}
X           <- c(X, X[1])
Y           <- c(Y, Y[1])
##  png("curves.png",height=10000,width=20000)
plot (X, Y, xlim = c(min(X), max(X)), ylim = c(min(Y), max(Y)),
type='l', lwd=0.5)
##  dev.off()
}
epicyclesF(1000)
epicyclesF      <- function(cycles){
set.seed(1234)
params      <- data.frame(amp=1/seq(1, cycles), freq=seq(1, cycles),
phase=runif(cycles, -pi/2, pi/2))
omegaT      <- seq(0, 2*pi, 0.0001)
X           <- numeric(length(omegaT))
Y           <- numeric(length(omegaT))
for (i in 1:length(omegaT)){
X[i]        <- sum(params$amp*cos((params$freq*omegaT[i]+params$phase)))
Y[i]        <- sum(params$amp*sin((params$freq*omegaT[i]+params$phase)))
}
X           <- c(X, X[1])
Y           <- c(Y, Y[1])
##  png("curves.png",height=10000,width=20000)
plot (X, Y, xlim = c(min(X), max(X)), ylim = c(min(Y), max(Y)),
type='l', lwd=0.5)
##  dev.off()
}
epicyclesF(1000)
epicyclesF      <- function(cycles){
set.seed(1234)
params      <- data.frame(amp=1/seq(1, cycles), freq=seq(1, cycles),
phase=runif(cycles, pi/2, 3*pi/2))
omegaT      <- seq(0, 2*pi, 0.0001)
X           <- numeric(length(omegaT))
Y           <- numeric(length(omegaT))
for (i in 1:length(omegaT)){
X[i]        <- sum(params$amp*cos((params$freq*omegaT[i]+params$phase)))
Y[i]        <- sum(params$amp*sin((params$freq*omegaT[i]+params$phase)))
}
X           <- c(X, X[1])
Y           <- c(Y, Y[1])
##  png("curves.png",height=10000,width=20000)
plot (X, Y, xlim = c(min(X), max(X)), ylim = c(min(Y), max(Y)),
type='l', lwd=0.5)
##  dev.off()
}
epicyclesF(1000)
choose(5, 4) * 0.5^5 + choose(5, 5) * 0.5^5
pbinom(4, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(3, size = 5, prob = 0.5, lower.tail = FALSE)
ppois(10, lambda = 5 * 3)
k <- 1000xvals <- seq(-5, 5, length = k) myplot <- function(df){    d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),                 x = xvals,                dist = factor(rep(c("Normal", "T"), c(k,k))))     g <- ggplot(d, aes(x = x, y = y))    g <- g + geom_line(size = 2, aes(colour = dist))    g }manipulate(myplot(mu), mu = slider(1, 20, step = 1))
k <- 1000xvals <- seq(-5, 5, length = k) myplot <- function(df){    d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),                 x = xvals,                dist = factor(rep(c("Normal", "T"), c(k,k))))     g <- ggplot(d, aes(x = x, y = y))    g <- g + geom_line(size = 2, aes(colour = dist))    g }
k <- 1000
xvals <- seq(-5, 5, length = k)
myplot <- function(df){    d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),                 x = xvals,                dist = factor(rep(c("Normal", "T"), c(k,k))))     g <- ggplot(d, aes(x = x, y = y))    g <- g + geom_line(size = 2, aes(colour = dist))    g }
myplot <- function(df){    d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),                 x = xvals,                dist = factor(rep(c("Normal", "T"), c(k,k))))     g <- ggplot(d, aes(x = x, y = y))    g <- g + geom_line(size = 2, aes(colour = dist))    g }
data(sleep)
head(sleep)
g1 <- sleep$extra[1 : 10]; g2 <- sleep$extra[11 : 20] difference <- g2 - g1mn <- mean(difference); s <- sd(difference); n <- 10
g1 <- sleep$extra[1 : 10]; g2 <- sleep$extra[11 : 20] difference <- g2 - g1mn <- mean(difference); s <- sd(difference); n <- 10
g1 <- sleep$extra[1 : 10] g2 <- sleep$extra[11 : 20] difference <- g2 - g1mn <- mean(difference)s <- sd(difference); n <- 10
g1 <- sleep$extra[1 : 10]
g1 <- sleep$extra[1 : 10]g2 <- sleep$extra[11 : 20]difference <- g2 - gmn <- mean(difference)s <- sd(difference); n <- 10
g1 <- sleep$extra[1 : 10]
g2 <- sleep$extra[11 : 20]
difference <- g2 - g1
mn <- mean(difference)
s <- sd(difference)
n <- 10
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
t.test(difference)
t.test(g2, g1, paired = TRUE)
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
1100 + c(-1, 1) * qt(.975, n-1) * 30 / sqrt(9)
1100 + c(-1, 1) * qt(.975, 8) * 30 / sqrt(9)
c(-1, 1) * qt(.975, 8) * 1 / sqrt(9)
c(-1, 1) * qt(.975, 8) * 2 / sqrt(9)
c(-1, 1) * qt(.975, 8) * 0.5 / sqrt(9)
c(-1, 1) * qt(.975, 8) * 3 / sqrt(9)
c(-1, 1) * qt(.975, 8) * 2.5 / sqrt(9)
c(-1, 1) * qt(.975, 8) * 2.6 / sqrt(9)
muold <- 5
munew <- 3
sold2 <- 0.68
snew2 <- 0.60
nold <- 10
nnew <- 10
df <- ((sold2/nold)+(snew2/nnew))^2 / ((((sold2/nold)^2)/(nold-1)) + (((snew2/nnew)^2)/(nnew-1)))
df
qt(15.04,.975)
pt(15.04,.975)
pt(15.04)
?pt()
qt(0.975,15.04)
qt(.975,df)
n1 = 10
n2 = 10
mu1 = 5
sd1 = 0.68
mu2 = 3
sd2 = 0.6
p = 0.975
SE <- sqrt( ((n2-1) * sd2 + (n1-1) * sd1) / (n1 + n2 - 2) )
( ci = mu2 - mu1 + c(-1,1) * qt(p, df=(n1+n2-2)) * SE * sqrt(1/n1 + 1/n2) )
p = 0.95
SE <- sqrt( ((n2-1) * sd2 + (n1-1) * sd1) / (n1 + n2 - 2) )
( ci = mu2 - mu1 + c(-1,1) * qt(p, df=(n1+n2-2)) * SE * sqrt(1/n1 + 1/n2) )
n1 = 100
n2 = 100
mu1 = 6
sd1 = 2
mu2 = 4
sd2 = 0.5
p = 0.975
SE <- sqrt( ((n2-1) * sd2 + (n1-1) * sd1) / (n1 + n2 - 2) )
( ci = mu2 - mu1 + c(-1,1) * qt(p, df=(n1+n2-2)) * SE * sqrt(1/n1 + 1/n2) )
( ci = mu1 - mu2 + c(-1,1) * qt(p, df=(n1+n2-2)) * SE * sqrt(1/n1 + 1/n2) )
nT = 9
nP = 9
muT = -3
sdT = 1.5
muP = 1
sdP = 1.8
p = 0.95
SE <- sqrt( ((nT-1) * sdT + (nP-1) * sdP) / (nT + nP - 2) )
( ci = muT - muP + c(-1,1) * qt(p, df=(nT+nP-2)) * SE * sqrt(1/nT + 1/nP) )
nT = 9
nP = 9
muT = -3
sdT = 1.5
muP = 1
sdP = 1.8
p = 0.90
SE <- sqrt( ((nT-1) * sdT + (nP-1) * sdP) / (nT + nP - 2) )
( ci = muT - muP + c(-1,1) * qt(p, df=(nT+nP-2)) * SE * sqrt(1/nT + 1/nP) )
p = 0.95
SE <- sqrt( ((nT-1) * sdT + (nP-1) * sdP) / (nT + nP - 2) )
( ci = muT - muP + c(-1,1) * qt(p, df=(nT+nP-2)) * SE * sqrt(1/nT + 1/nP) )
nT = 9
nP = 9
muT = -3
sdT = 1.5
muP = 1
sdP = 1.8
p = 0.95
SE <- sqrt( ((nT-1) * sdT^2 + (nP-1) * sdP^2) / (nT + nP - 2) )
( ci = muT - muP + c(-1,1) * qt(p, df=(nT+nP-2)) * SE * sqrt(1/nT + 1/nP) )
mu0 = 1100
sd = 30
n = 9
p = 0.975
( ci = mu0 + c(-1,1) * qt(p,df=n-1) * 30/sqrt(n) )   #confi
mu0 = 1100
sd = 30
n = 9
p = 0.975
( ci = mu0 + c(-1,1) * qt(p,df=n-1) * sd/sqrt(n) )
ci_up = 0
mua = -2
n = 9
p = 0.975
( sd = ci_up - mua * sqrt(n) / qt(p, df=n-1))
n1 = 10
n2 = 10
mu1 = 5
sd1 = 0.68
mu2 = 3
sd2 = 0.6
p = 0.975
SE <- sqrt( ((n2-1) * sd2 + (n1-1) * sd1) / (n1 + n2 - 2) )
( ci = mu2 - mu1 + c(-1,1) * qt(p, df=(n1+n2-2)) * SE * sqrt(1/n1 + 1/n2) )
nT = 9
nP = 9
muT = -3
sdT = 1.5
muP = 1
sdP = 1.8
p = 0.95
SE <- sqrt( ((nT-1) * sdT^2 + (nP-1) * sdP^2) / (nT + nP - 2) )
( ci = muT - muP + c(-1,1) * qt(p, df=(nT+nP-2)) * SE * sqrt(1/nT + 1/nP) )
n1 = 100
n2 = 100
mu1 = 6
sd1 = 2
mu2 = 4
sd2 = 0.5
p = 0.975
SE <- sqrt( ((n2-1) * sd2^2 + (n1-1) * sd1^2) / (n1 + n2 - 2) )
( ci = mu2 - mu1 + c(-1,1) * qt(p, df=(n1+n2-2)) * SE * sqrt(1/n1 + 1/n2) )
n1 = 100
n2 = 100
mu1 = 6
sd1 = 2
mu2 = 4
sd2 = 0.5
p = 0.975
SE <- sqrt( ((n2-1) * sd2^2 + (n1-1) * sd1^2) / (n1 + n2 - 2) )
( ci = mu1 - mu2 + c(-1,1) * qt(p, df=(n1+n2-2)) * SE * sqrt(1/n1 + 1/n2) )
nold = 100
nnew = 100
muold = 6
sdold = 2
munew = 4
sdnew = 0.5
p = 0.975
SE <- sqrt( ((nnew-1) * sdnew^2 + (nold-1) * sdold^2) / (nold + nnew - 2) )
( ci = muold - munew + c(-1,1) * qt(p, df=(nold+nnew-2)) * SE * sqrt(1/nold + 1/nnew) )
baseline    <- c(140, 138, 150, 148, 135)
week2       <- c(132, 135, 151, 146, 130)
t.test(baseline, week2, alt = "two.sided", paired = TRUE)$p.value
t.test(baseline, week2, alt = "two.sided", paired = FALSE)$p.value
t.test(baseline, week2, alt = "one.sided", paired = TRUE)$p.value
t.test(baseline, week2, paired = TRUE)$p.value
t.test(baseline, week2, alt = "one.sided", paired = TRUE)$p.value
t.test(baseline, week2, alt = "two.sided", paired = TRUE)$p.value
n       <- 9
mu      <- 1100
sd      < 30
mu + c(-1,1) * qt(.975, n-1) * sd/sqrt(n)
n       <- 9
mu      <- 1100
sd      <- 30
mu + c(-1,1) * qt(.975, n-1) * sd/sqrt(n)
sample      <- 4
cokes       <- 3
binom.test(cokes, sample, alt="greater")$p.value
rate            <- (1/100)
infections      <- 10
time            <- 1787
poisson.test(infections, T = time, r = rate, alt="less")$p.value
npill       <- 9
mupill      <- -3
sdpill      <- 1.5
nplac       <- 9
muplac      <- 1
sdplac      <- 1.8
SE <- ( (npill - 1) * sdpill^2 + (nplac - 1) * sdplac^2) / (npill + nplac - 2)
t <- (mupill - muplac) / (SE * sqrt(1/npill + 1/nplac))
( p.val = 2 * pt(t, npill + nplac - 2) )
power.t.test(n=100, delta=0.01, sd=0.04, sig.level=0.05,
type="one.sample", alt="one.sided")$power
power.t.test(power=0.9, delta=0.01, sd=0.04, sig.level=0.05, type="one.sample",
alt="one.sided")$n
power.t.test(power=0.9, delta=0.01, sd=0.04, sig.level=0.05, type="one.sample",
alt="one.sided")$n
power.t.test(power=0.9, delta=0.01, sd=0.04, sig.level=0.05, alt="one.sided")$n
baseline    <- c(140, 138, 150, 148, 135)
week2       <- c(132, 135, 151, 146, 130)
t.test(baseline, week2, alt = "two.sided", paired = TRUE)$p.value
sample  <- 9
mu      <- 1100
sd      <- 30
mu + c(-1, 1) * qt(.975, sample - 1) * sd/sqrt(sample)
sample      <- 4
cokes       <- 3
binom.test(cokes, sample, alt="greater")$p.value
rate            <- (1/100)
infections      <- 10
time            <- 1787
poisson.test(infections, T = time, r = rate, alt="less")$p.value
npill       <- 9
mupill      <- -3
sdpill      <- 1.5
nplac       <- 9
muplac      <- 1
sdplac      <- 1.8
SE <- ( (npill - 1) * sdpill^2 + (nplac - 1) * sdplac^2) / (npill + nplac - 2)
t <- (mupill - muplac) / (SE * sqrt(1/npill + 1/nplac))
( p.val = 2 * pt(t, npill + nplac - 2) )
SE <- sqrt( ( (npill - 1) * sdpill^2 + (nplac - 1) * sdplac^2) / (npill + nplac - 2))
t <- (mupill - muplac) / (SE * sqrt(1/npill + 1/nplac))
( p.val = 2 * pt(t, npill + nplac - 2) )
npill       <- 9
mupill      <- -3
sdpill      <- 1.5
nplac       <- 9
muplac      <- 1
sdplac      <- 1.8
SEsq <- ( (npill - 1) * sdpill^2 + (nplac - 1) * sdplac^2) / (npill + nplac - 2)
t <- (mupill - muplac) / (SEsq * sqrt(1/npill + 1/nplac))
( p.val = 2 * pt(t, npill + nplac - 2) )
power.t.test(n=100, delta=0.01, sd=0.04, sig.level=0.05,
type="one.sample", alt="one.sided")$power
power.t.test(power=0.9, delta=0.01, sd=0.04, sig.level=0.05, type="one.sample",
alt="one.sided")$n
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
0.64
0.64
mypdf
integrate(mypdf,0,1.6)
1.414
sqrt(2)
.001*.997
(1-.997)*(1-.001)
(1-.985)*(1-.001)
0.000997/(0.000997+0.014985)
(6+5+4+3+2+1)/6
expect_dice
expect_dice()
exit
q
expect_dice
exit
quir
quit
library(swirl)
swirl()
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smean)
mean(smeans)
dice_sqr
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10
)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(3,5)*.8
sum(choose(5,3:5)*(.8)^x*(.2)^(5-3:5))
sum(choose(5,3:5)*(.8)^(3:5)*(.2)^(5-3:5))
pbinom(2,5,.8,lower.tail=FALSE)
qnorm(0.1)
0
qnorm(0.975,mean=3, sd=2)
1.96*2 + 3
pnorm(1200,mean=1020,sd=50,lower.tail=FALSE)
pnorm((1200-1020)/50)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(0.75, mean=1020, sd=50)
.53
.53
ppois(3,10)
ppois(3,2.5 * 4)
pbinom(.005,1000,.01)
pbinom(5,1000,.01)
ppois(5, 1000 * 0.01)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 +c(-1,1)*qnorm(0.975)*sqrt(0.6*0.4/100)
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poissoon.test(5,94.32)$conf
poisson.test(5,94.32)$conf
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1)*qt(0.975,9)*s/sqrt(10)
t.test(differences)$conf.int
t.test(difference)$conf.int
sp <- (7*15.34^2) + (20*18.23^2)
ns <- 27
sp <- sqrt(sp/ns)
(132.86-127.44) + c(-1,1)*qt(0.975,ns)*sp*sqrt(1/7 + 1/20)/sqrt(28)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp <- sqrt(sum(9*(var(g1)+var(g2)))/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1)*
1
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)$conf
t.test(g2, g1, paired=TRUE)$conf
num <- 1
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 1
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
qt(1,1)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
10/10
2
8
(32-30)/(10/4)
15
qt(0.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
pt(2.5,15,lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2,lower.tail=FALSE)
mbin
mybin
pbinom(6,size=8,prob=0.5,lower.tail=FALSE)
pbinom(7,size=8,prob=0.5,lower.tail=TRUE)
ppois(9,5,lower.tail=false)
ppois(9,5,lower.tail=FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(0.95)
pnorm(30+z,mean=30,lower.tail=FALSE)
pnorm(30+z,mean=32,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=1,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=2,lower.tail=FALSE)
pnorm(30+z*2,mean=32,sd=2,lower.tail=FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta =2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta =100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
head(pValues)
sum(pValues<.05)
sum(p.adjust(pValues, method="bonferroni")<.05)
sum(p.adjust(pValues, method="BH")<.05)
tail(trueStatus)
table(pValues<0.05, trueStatus)
table(pValues2<0.05, trueStatus)
24/5
24/500
table(p.adjust(pValues2, method="bonferroni)<0.05, trueStatus)
)
table(p.adjust(pValues2, method="bonferroni")<0.05, trueStatus)
table(p.adjust(pValues2, method="BH")<0.05, trueStatus)
sum(1:6/6)
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace=TRUE)
resam <- matrix(same, B, nh)
resam <- matrix(sam, B, nh)
meds <- apply(resam,1,median)
median(fh)
median(meds)
median(meds)-median(fh)
sd (meds)
sd(resampledMedians)
quantile(resampledMedians,c(.025,.975))
quantile(meds,c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts,group)
obs
mean(Bdata$count-Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
mean(perms>obs)
testStat(DEcounts,group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
plot(intervals, meanStepsWeekday, type="l", main="Weekday mean steps vs interval", cex.axis=0.75, cex.lab=0.75,
)
dirPath         <- "~/Documents/Data Science Specialisation/5 - Reproducible Research/RepData_PeerAssessment1"
setwd(dirPath)
```{r steps_per_day, echo=1:6}
